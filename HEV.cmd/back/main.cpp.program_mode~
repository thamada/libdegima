#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include <time.h>
#include <sys/time.h>
#include <sys/resource.h>
double get_time(void)
{
  static struct timeval tv;
  static struct timezone tz;
  gettimeofday(&tv, &tz);
  return ((double)(tv.tv_sec  + tv.tv_usec*1.0e-6));
}

#include "DriveInformation.h"
static zmp::hev::DriveInformation drive_info;

#include "HevCnt.h"
static HevCnt* hev;

void _change_drive_mode(){
  static bool mode = false;
  if(mode == false){
    drive_info.SetMode(0x10);  // 0x00=manual, 0x10=program
    drive_info.SetServo(0x10); // 0x00=OFF, 0x10=ON
    mode = true;
  }else{
    drive_info.SetMode(0x00);  // 0x00=manual, 0x10=program
    drive_info.SetServo(0x00); // 0x00=OFF, 0x10=ON
    mode = false;
  }
}



void set_mode_manual(){
  hev->SetDrvMode(MODE_MANUAL);
  hev->SetStrMode(MODE_MANUAL);
  hev->SetDrvServo(0x00);
  hev->SetStrServo(0x00);
}


void set_mode_program(){
  hev->SetDrvMode(MODE_PROGRAM);
  hev->SetStrMode(MODE_PROGRAM);
  hev->SetDrvServo(0x10);
  hev->SetStrServo(0x10);
}

void change_drive_mode(){
  static bool mode = false;
  if(mode == false){
    std::cout << "PROGRAM MODE: ON" << std::endl;
    set_mode_program();
    mode = true;
  }else{
    std::cout << "PROGRAM MODE: OFF" << std::endl;
    set_mode_manual();
    mode = false;
  }
}



void check_mode(DrvInf& _drvInf)
{
  if     (_drvInf.mode == MODE_PROGRAM) fprintf(stderr, "Programm mode\n");
  else if(_drvInf.mode == MODE_MANUAL)  fprintf(stderr, "Manual mode\n");
  else fprintf(stderr, "Unkown mode\n");
}


int main(int argc, char *argv[]){
  double t0 = get_time();
  int cnt = 0;
  BattInf  _battInf;
  BrakeInf _brakeInf;
  DrvInf   _drvInf;
  OtherInf _otherInf;
  StrInf   _strInf;
  int      _errCode;
  int      _errLevel;

  hev = new HevCnt();
  hev->Init();
  hev->Start();
  hev->SetDrvMode(MODE_MANUAL);
  hev->SetDrvServo(0x00);
  hev->SetStrMode(MODE_MANUAL);
  hev->SetStrServo(0x00);
  hev->SetDrvVeloc(0);
  hev->SetDrvStroke(0);
  hev->SetBrakeStroke(0);

  set_mode_program();
  set_mode_program();


  {
    sleep(2);
    //    change_drive_mode();
    hev->GetDrvInf(&_drvInf);
    check_mode(_drvInf);

    hev->SetStrAngle((int)3000);

  }


  return 0;
}
